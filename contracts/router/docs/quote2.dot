digraph {
    sdk [label = "SDK";];
    router [label = "SynapseRouterV2";shape = rect;];
    quoter [label = "SwapQuoterV2";shape = rect;];
    bridgeAdapters [label = "All Bridge Adapters";shape = rect;];
    bridgeTokens [label = "List of Bridge Tokens";shape = rect;style = dashed;];
    node [shape = none; fontname = "Arial";];
    getOriginAmountOut [label = <
        <TABLE>
        <TR>
        <TD>Function</TD>
        <TD>synapseRouterV2.getOriginAmountOut</TD>
        </TR>
        <TR>
        <TD>Parameters</TD>
        <TD>tokenIn, tokenSymbols[], amountIn</TD>
        </TR>
        <TR>
        <TD>Return</TD>
        <TD>originQueries: SwapQuery[]</TD>
        </TR>
        </TABLE>
        >;];
    symbolToToken [label = <
        <TABLE>
        <TR>
        <TD>Function</TD>
        <TD>bridgeAdapter.symbolToToken</TD>
        </TR>
        <TR>
        <TD>Parameters</TD>
        <TD>tokenSymbol</TD>
        </TR>
        <TR>
        <TD>Return</TD>
        <TD>token: address</TD>
        </TR>
        </TABLE>
        >;];
    getAmountOut [label = <
        <TABLE>
        <TR>
        <TD>Function</TD>
        <TD>swapQuoterV2.getAmountOut</TD>
        </TR>
        <TR>
        <TD>Parameters</TD>
        <TD>tokenIn, tokenOut, amountIn</TD>
        </TR>
        <TR>
        <TD>Return</TD>
        <TD>query: SwapQuery</TD>
        </TR>
        </TABLE>
        >;];
    getAllPools [label = <
        <TABLE>
        <TR>
        <TD>Function</TD>
        <TD>swapQuoterV2.getAllPools</TD>
        </TR>
        <TR>
        <TD>Return</TD>
        <TD>pools: address[]</TD>
        </TR>
        </TABLE>
        >;];
    checkPoolQuote [label = <
        <TABLE>
        <TR>
        <TD>Function</TD>
        <TD>swapQuoterV2.checkPoolQuote</TD>
        </TR>
        <TR>
        <TD>Parameters</TD>
        <TD>pool, tokenIn, tokenOut, amountIn</TD>
        </TR>
        <TR>
        <TD>Return</TD>
        <TD>query: SwapQuery</TD>
        </TR>
        </TABLE>
        >;];
    
    sdk -> router [label = "1a. Call Router";];
    sdk -> getOriginAmountOut [label = "1a. Call Router"; style = dashed;];
    
    router -> bridgeAdapters [label = "2a. Call every Bridge Adapter";];
    bridgeAdapters -> symbolToToken [label = "2a. Call every Bridge Adapter"; style = dashed;];
    symbolToToken -> router [label = "2b. Bridge token address";];
    router -> bridgeTokens [label = "2c. Compile token addresses list";];
    
    bridgeTokens -> quoter [label = "3a. Call Quoter";];
    bridgeTokens -> getAmountOut [label = "3a. Call Quoter"; style = dashed;];
    
    quoter -> getAllPools [label = "4a. Get every origin/destination pool"; style = dashed;];
    quoter -> checkPoolQuote [label = "4b. Check every pool quote"; style = dashed;];
    getAmountOut -> bridgeTokens [label = "4c. Return a quote";];
    
    bridgeTokens -> sdk [label = "5. Compile list of SwapQuery quotes";];
    
    subgraph {
        rank = same;
        edge [style = invis;];
        getOriginAmountOut -> router -> bridgeTokens;
    }
    
    subgraph {
        rank = same;
        edge [style = invis;];
        quoter -> getAmountOut;
    }
}